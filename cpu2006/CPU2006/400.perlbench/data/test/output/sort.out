1..75
# 1: x = 'AbelCaincatdogx', expected = 'AbelCaincatdogx'
ok 1
# 2: x = 'xdogcatCainAbel', expected = 'xdogcatCainAbel'
ok 2
# 3: x = 'xdogcatCainAbel', expected = 'xdogcatCainAbel'
ok 3
# 4: x = 'AbelAxedCaincatchaseddoggonepunishedtoxyz', expected = 'AbelAxedCaincatchaseddoggonepunishedtoxyz'
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
# 11: x = xdogcatCainAbel, expected = 'xdogcatCainAbel'
ok 11
# 12: x = xdogcatCainAbel, expected = 'xdogcatCainAbel'
ok 12
ok 13
# x = '1 2 3 4'
ok 14
# x = '1 2 3 4'
ok 15
# x = '1 2 3 4'
ok 16
# x = '1 2 3 4'
ok 17
ok 18
ok 19
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
# x = '1996 255 90 19 5'
ok 41
# x = 'AbelCaincatdogx'; expected = 'AbelCaincatdogx'
ok 42
# x = 'xdogcatCainAbel'; expected = 'xdogcatCainAbel'
ok 43
# x = '5 19 90 255 1996'
ok 44
# x = '1996 255 90 19 5'
ok 45
# x = 'AbelCaincatdogx'; expected = 'AbelCaincatdogx'
ok 46
# x = 'xdogcatCainAbel'; expected = 'xdogcatCainAbel'
ok 47
ok 48
# x = '1996 255 90 19 5'
ok 49
# x = '90 5 255 1996 19'
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
# x = '1 2 3 4'
ok 57
ok 58
ok 59 - inplace sort of global
ok 60 - inplace sort of lexical
ok 61 - inplace reversed sort of global
ok 62 - inplace custom sort of global
ok 63 - inplace sort with function of lexical
ok 64 - skipped Tie::Array test
ok 65 - skipped Tie::Array test
ok 66 - un-inplace sort of global
ok 67 - un-inplace sort of global 2
ok 68 - un-inplace sort of lexical
ok 69 - un-inplace sort of lexical 2
ok 70 - un-inplace reversed sort of global
ok 71 - un-inplace reversed sort of global 2
ok 72 - un-inplace custom sort of global
ok 73 - un-inplace custom sort of global 2
ok 74 - un-inplace sort with function of lexical
ok 75 - un-inplace sort with function of lexical 2
